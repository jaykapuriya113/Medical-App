///1

//Node.js CSV to JSON
// In the JavaScript file, you have a program that performs a GET request on the route
https://coderbyte.com/api/challenges/logs/user-info-csv and then sort the CSV data by the
// second column.
// Finally, convert the sorted CSV data to a JSON object and console log it as a string.
// Example Input:
// name,email,phone
// John Doe,johndoe@example.com,555-1234
// Jane Smith,janesmith@example.com,555-5678
// Example Output: [{"name":"John Doe","email":"johndoe@example.com","phone":"555-1234"},
// {"name":"Jane Smith","email":"janesmith@example.com","phone":"555-5678"}]
const csvToJson = async () => {
const data = await axios.get(
"https://coderbyte.com/api/challenges/logs/user-info-csv"
);
const val = await data.data.split("\n");
const headers = await val[0].split(",");
let result = [];
val.shift();
// console.log(val);
val.forEach((line) => {
let obj = {};
let presentLine = line.split(",");
// console.log(presentLine);
headers.forEach((header, i) => {
obj[header] = presentLine[i];
});
result.push(obj);
});
console.log(JSON.stringify(result));
};
csvToJson();

///2

const axios = require("axios");

let processData = "hd";
const getData = async (url) => {
const res = await axios.get(
"https://coderbyte.com/api/challenges/json/age-counting"
);
// console.log(res);
processData = await res.data.data;
const datas = processData.split(", ");
let counter = 0;
/* age > 50 code */
// datas.forEach((el) => {
// if (el.startsWith("age")) {
// el = el.replace("age=", "");
// if (el * 1 > 50) counter++;
// }
// });
/* 10-15 index of keys */
// const keys = datas.filter((val) => {
// return val.includes("key");
// });
// const key = keys.map((e) => e.split("=")[1]);
// console.log(key.slice(10, 15).join(" "));
/* JSON cleaning (remove "", "N/A") */
// const cleanedkeys = key.filter((el) => {
// if (el != "" || el != "N/A") return el;
// });
// console.log(cleanedkeys.length);
// console.log(key.length);
};
getData();

///3

// in the JavaScript file, you have a program that performs a GET request on the route
// https://coderbyte.com/api/challenges/json/date-list and then create a new array of
// objects with a date property and a value property with at least one item per day between
// the earliest and latest dates in the input array. If there is no data for a particular
// day, the value should be 0.
// Finally, console log an array of objects as a string.

const axios = require('axios');
// Make GET request to the API endpoint
axios.get('https://coderbyte.com/api/challenges/json/date-list')
.then(response => {
const data = response.data;
// Find the earliest and latest dates in the array
const dates = data.map(item => new Date(item.date));
const earliestDate = new Date(Math.min(...dates));
const latestDate = new Date(Math.max(...dates));
// Create a new array of objects with a date property and a value property
const newData = [];
let currentDate = new Date(earliestDate);
while (currentDate <= latestDate) {
const dateString = currentDate.toISOString().slice(0, 10);
const value = data.find(item => item.date.startsWith(dateString))?.value || 0;
newData.push({ date: dateString, value });
currentDate.setDate(currentDate.getDate() + 1);
}
// Log the array of objects as a string
console.log(JSON.stringify(newData));
})
.catch(error => {
console.log(error);
});

///4

// In the JavaScript file, you have a program that performs a GET request on the route
//https:coderbyte.com/api/challenges/json/date-list and then create a new array of objects with a date property
// and a value property with at least one item per day between the earliest and latest dates in the input array. If
// there is no data for a particular day, the value should be 0.
// Finally, console log an array of objects as a string.

const axios = require('axios')

const countAge= async () => {
const data = await axios.get('https://coderbyte.com/api/challenges/json/age-counting')
let jsonData = await data.data
const arr = jsonData.data.split(', ')
let obj = []
for (let i = 0; i < arr.length; i = i + 2) {

let key = arr[i].split('=')[1]
let age = arr[i + 1].split('=')[1]
let d = {
key: key,
age: age
}
obj.push(d)
}
let count = 0
let count1 = 0
let temp = 1
for (let i = 0; i < obj.length; i++) {
if (obj[i].age >= 50) {
// console.log(temp)
temp++
count++
}
}
console.log(count)
}

countAge()




// --------------------------
// const countAge = asyncHandler(async () => {
//   const data = await axios.get(
//     " https://coderbyte.com/api/challenges/json/age-counting "
//   );
//   const kjk = await data.data;
//   const arr = kjk.data.split(", ");
//   let obj = [];

//   for (let i = 0; i < arr.length; i += 2) {
//     let key = arr[i].split("=")[1];
//     let age = arr[i + 1].split("=")[1];

//     let k = {
//       key,
//       age,
//     };
//     obj.push(k);
//   }

//   let str = "";
//   for (let i = 0; i < obj.length; i++) {
//     if (obj[i].age == 32) {
//       str = str + obj[i].key + "\n";
//     }
//   }

//   fs.writeFileSync("text.txt", str);

//   const hashedData = crypto
//     .createHash("sha256")
//     .update(JSON.stringify(str))
//     .digest("hex");

//   console.log(hashedData);
// });

// countAge();

///////////////////////////////////////////////////////////////////////////////
// const jsonCleaning = asyncHandler(async () => {
//   const data = await axios.get(
//     "https://coderbyte.com/api/challenges/json/json-cleaning"
//   );

//   const jsonData = await data.data;

//   for (let key in jsonData) {
//     if (typeof jsonData[key] === "object") {
//       if (Array.isArray(jsonData[key])) {
//         let arr = jsonData[key];
//         for (let el in arr) {
//           if (arr[el] === "-") {
//             arr.pop(arr[el]);
//           }
//         }
//       }
//       let obj = jsonData[key];
//       for (let val in obj) {
//         if (obj[val] === "" || obj[val] === "N/A") {
//           delete obj[val];
//         }
//       }
//     } else {
//       if(jsonData[key] === "-") {
//          delete jsonData[key]
//       }
//     }
//   }

//   console.log(JSON.stringify(jsonData));
// });
// jsonCleaning();

////////////////////////////////////////////////
// const countAge = async () => {
//   const data = await axios.get(
//     'https://coderbyte.com/api/challenges/json/age-counting'
//   );
//   const jam = await data.data;
//   let obj = [];
//   let counter = 0;

//   let jsonData = jam.data.split(', ');

//   for (let i = 0; i < jsonData.length; i += 2) {
//     let key = jsonData[i].split('=')[1];
//     let age = jsonData[i + 1].split('=')[1];

//     let k = {
//       key,
//       age,
//     };

//     obj.push(k);
//   }

//   for (let i = 0; i < obj.length; i++) {
//     if (obj[i].age >= 50) {
//       counter++;
//     }
//   }
//   console.log(counter);
// };
// countAge();
